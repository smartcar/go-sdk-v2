// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/smartcar/go-sdk-v2/pkg/models/shared"
	"net/http"
)

var DeleteManagementVehicleConnectionsServerList = []string{
	"https://management.smartcar.com/v2.0",
}

type DeleteManagementVehicleConnectionsSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

func (o *DeleteManagementVehicleConnectionsSecurity) GetPassword() string {
	if o == nil {
		return ""
	}
	return o.Password
}

func (o *DeleteManagementVehicleConnectionsSecurity) GetUsername() string {
	if o == nil {
		return ""
	}
	return o.Username
}

type DeleteManagementVehicleConnectionsRequest struct {
	// Delete all connections containing this user ID (UUID v4).
	UserID *string `queryParam:"style=form,explode=true,name=user_id"`
	// Delete all connections containing this vehicle ID (UUID v4).
	VehicleID *string `queryParam:"style=form,explode=true,name=vehicle_id"`
}

func (o *DeleteManagementVehicleConnectionsRequest) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}

func (o *DeleteManagementVehicleConnectionsRequest) GetVehicleID() *string {
	if o == nil {
		return nil
	}
	return o.VehicleID
}

type DeleteManagementVehicleConnectionsResponse struct {
	ContentType string
	// returns all deleted connections
	DeletedConnectionsResponse []shared.DeletedConnection
	StatusCode                 int
	RawResponse                *http.Response
}

func (o *DeleteManagementVehicleConnectionsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DeleteManagementVehicleConnectionsResponse) GetDeletedConnectionsResponse() []shared.DeletedConnection {
	if o == nil {
		return nil
	}
	return o.DeletedConnectionsResponse
}

func (o *DeleteManagementVehicleConnectionsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DeleteManagementVehicleConnectionsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
