// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SuccessResponseStatus string

const (
	SuccessResponseStatusSuccess SuccessResponseStatus = "SUCCESS"
	SuccessResponseStatusFailed  SuccessResponseStatus = "FAILED"
)

func (e SuccessResponseStatus) ToPointer() *SuccessResponseStatus {
	return &e
}

func (e *SuccessResponseStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUCCESS":
		fallthrough
	case "FAILED":
		*e = SuccessResponseStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SuccessResponseStatus: %v", v)
	}
}

// SuccessResponse - return Success Response
type SuccessResponse struct {
	Message *string                `json:"message,omitempty"`
	Status  *SuccessResponseStatus `json:"status,omitempty"`
}
