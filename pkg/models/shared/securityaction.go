// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SecurityActionAction string

const (
	SecurityActionActionLock   SecurityActionAction = "LOCK"
	SecurityActionActionUnlock SecurityActionAction = "UNLOCK"
)

func (e SecurityActionAction) ToPointer() *SecurityActionAction {
	return &e
}

func (e *SecurityActionAction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LOCK":
		fallthrough
	case "UNLOCK":
		*e = SecurityActionAction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SecurityActionAction: %v", v)
	}
}

type SecurityAction struct {
	Action *SecurityActionAction `json:"action,omitempty"`
}
